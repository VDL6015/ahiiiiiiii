window.onload = () => {
  // MATRIX
  const canvas = document.getElementById("matrix-canvas");
  const ctx = canvas.getContext("2d");
  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;
  const letters = "HAPPYBIRTHDAY".split("");
  const fontSize = 20;
  const columns = Math.floor(canvas.width / fontSize);
  const drops = Array(columns).fill(1);
  function drawMatrix() {
    ctx.fillStyle = "rgba(0, 0, 0, 0.05)";
    ctx.fillRect(0, 0, canvas.width, canvas.height);
    ctx.fillStyle = "#ff69b4";
    ctx.font = fontSize + "px monospace";
    for (let i = 0; i < drops.length; i++) {
      const text = letters[Math.floor(Math.random() * letters.length)];
      ctx.fillText(text, i * fontSize, drops[i] * fontSize);
      if (drops[i] * fontSize > canvas.height || Math.random() > 0.95) {
        drops[i] = 0;
      }
      drops[i]++;
    }
  }
  const matrixInterval = setInterval(drawMatrix, 50);

  // COUNTDOWN
  const countdownEl = document.getElementById("countdown-text");
  let countdown = 5;
  countdownEl.textContent = countdown;
  const countdownInterval = setInterval(() => {
    countdownEl.textContent = countdown;
    countdown--;
    if (countdown < 0) {
      clearInterval(countdownInterval);
      clearInterval(matrixInterval);
      document.getElementById("countdown-container").style.transition = "opacity 1s";
      document.getElementById("countdown-container").style.opacity = "0";
      setTimeout(() => {
        document.getElementById("countdown-container").style.display = "none";
        document.querySelector(".container").style.display = "flex";
        document.querySelector(".container").style.opacity = "1";
        startTypewriter();
        loadPage(currentPage);
        showFlyingWords();
      }, 1000);
    }
  }, 1000);

  // TYPEWRITER
  const fullMessage = "Ch√∫c m·ª´ng sinh nh·∫≠t! üéà Mong b·∫°n lu√¥n c∆∞·ªùi th·∫≠t t∆∞∆°i!";
  let i = 0;
  function startTypewriter() {
    const messageEl = document.getElementById("birthday-message");
    messageEl.textContent = "";
    function type() {
      if (i < fullMessage.length) {
        messageEl.textContent += fullMessage.charAt(i);
        i++;
        setTimeout(type, 60);
      }
    }
    type();
  }

  // MUSIC TOGGLE
  const music = document.getElementById("bg-music");
  const musicBtn = document.getElementById("music-toggle");
  function tryPlay() {
    music.play().catch(() => {
      document.body.addEventListener("click", () => music.play(), { once: true });
    });
  }
  tryPlay();
  musicBtn.addEventListener("click", () => {
    if (music.paused) {
      music.play();
      musicBtn.textContent = "üîä";
    } else {
      music.pause();
      musicBtn.textContent = "üîá";
    }
  });

  // BOOK FLIP
  const pages = [
    { img: "anh 10.jpg", message: "Ch√∫c b·∫°n tu·ªïi m·ªõi lu√¥n r·∫°ng r·ª° nh∆∞ √°nh m·∫∑t tr·ªùi!" },
    { img: "anh 11.jpg", message: "Mong m·ªçi ƒëi·ªÅu ∆∞·ªõc c·ªßa b·∫°n ƒë·ªÅu tr·ªü th√†nh s·ª± th·∫≠t!" },
    { img: "anh 12.jpg", message: "H·∫°nh ph√∫c, s·ª©c kh·ªèe v√† th√†nh c√¥ng s·∫Ω lu√¥n b√™n b·∫°n üéÇ" },
    { img: "anh 13.jpg", message: "Lu√¥n tr√†n ƒë·∫ßy nƒÉng l∆∞·ª£ng t√≠ch c·ª±c trong cu·ªôc s·ªëng!" },
    { img: "anh 14.jpg", message: "Ch√∫c m·ªôt nƒÉm m·ªõi ƒë·∫ßy b·∫•t ng·ªù v√† th√∫ v·ªã! üéÅ" },
  ];
  let currentPage = 0;
  function loadPage(index) {
    const page = pages[index];
    document.getElementById("page-image").src = page.img;
    document.getElementById("page-message").textContent = page.message;
  }
  document.getElementById("next-page").addEventListener("click", () => {
    currentPage = (currentPage + 1) % pages.length;
    loadPage(currentPage);
  });
  document.getElementById("prev-page").addEventListener("click", () => {
    currentPage = (currentPage - 1 + pages.length) % pages.length;
    loadPage(currentPage);
  });

  // STARRY SKY WITH COMET EFFECT
  const starsCanvas = document.getElementById("stars-canvas");
  const starsCtx = starsCanvas.getContext("2d");
  starsCanvas.width = window.innerWidth;
  starsCanvas.height = window.innerHeight;
  let stars = [];
  for (let i = 0; i < 150; i++) {
    stars.push({
      x: Math.random() * starsCanvas.width,
      y: Math.random() * starsCanvas.height,
      radius: Math.random() * 1.5,
      alpha: Math.random(),
      delta: Math.random() * 0.02,
      vx: (Math.random() - 0.5) * 2,
      vy: (Math.random() - 0.5) * 2
    });
  }
  function drawStars() {
    starsCtx.fillStyle = "rgba(0, 0, 0, 0.1)";
    starsCtx.fillRect(0, 0, starsCanvas.width, starsCanvas.height);
    for (let star of stars) {
      starsCtx.beginPath();
      const gradient = starsCtx.createRadialGradient(star.x, star.y, 0, star.x, star.y, star.radius * 5);
      gradient.addColorStop(0, `rgba(255, 255, 255, ${star.alpha})`);
      gradient.addColorStop(1, `rgba(255, 255, 255, 0)`);
      starsCtx.fillStyle = gradient;
      starsCtx.arc(star.x, star.y, star.radius, 0, Math.PI * 2);
      starsCtx.fill();
      star.x += star.vx;
      star.y += star.vy;
      star.alpha += star.delta;
      if (star.alpha <= 0 || star.alpha >= 1) star.delta *= -1;
      if (star.x < 0 || star.x > starsCanvas.width || star.y < 0 || star.y > starsCanvas.height) {
        star.x = Math.random() * starsCanvas.width;
        star.y = Math.random() * starsCanvas.height;
      }
    }
    requestAnimationFrame(drawStars);
  }
  drawStars();

 // FANCY FLYING TEXT EFFECT
const beautifulWords = `H·∫øt h·ªìn nh∆∞ g·∫∑p ti√™n, khuynh qu·ªëc khuynh th√†nh, chim sa c√° l·∫∑n, hoa nh∆∞·ªùng nguy·ªát th·∫πn, qu·ªëc s·∫Øc thi√™n h∆∞∆°ng, tr·ªùi sinh quy·∫øn r≈©, m·∫Øt ng·ªçc m√†y ng√†i, th∆∞·ªõt tha m·ªÅm m·∫°i, duy√™n d√°ng y√™u ki·ªÅu, quy·∫øn r≈© m√™ ng∆∞·ªùi, t·ª± nhi√™n ph√≥ng kho√°ng, d·ªãu d√†ng ƒë·ªông l√≤ng ng∆∞·ªùi, kh√©o hi·ªÉu l√≤ng ng∆∞·ªùi, ho·∫°t b√°t ƒë√°ng y√™u duy√™n d√°ng y√™u ki·ªÅu nh∆∞ hoa nh∆∞ ng·ªçc,nguy·ªÖn ng·ªçc √¥n h∆∞∆°ng, lan t√¢m hu·ªá ch·∫•t, kh√¥n kh√©o th√¥ng minh, r√∫ng ƒë·ªông l√≤ng ng∆∞·ªùi, m·∫Øt s√°ng m√†y thanh, thi√™n sinh l·ªá ch·∫•t, qu·ªëc s·∫Øc thi√™n h∆∞∆°ng, m√¥i ƒë·ªè rƒÉng tr·∫Øng, ƒë√¥i m·∫Øt s√°ng trong, m√° l√∫m ƒë·ªìng ti·ªÅn, tay nh∆∞ c·ªè m·ªÅm, da tr·∫Øng n√µn n√†, c·ªï nh∆∞ c·ªï ng·ªóng, rƒÉng nh∆∞ ng√† voi, tr√°n t·ª±a m·ªπ nh√¢n, n·ª• c∆∞·ªùi duy√™n d√°ng, m·∫Øt ƒë·∫πp l√∫ng li·∫øng, phong th√°i ki·ªÅu di·ªÖn,s·∫Øc ƒë·∫πp t·ª± nhi√™n, chi·∫øm tr·ªçn phong l∆∞u, khu√¥n m·∫∑t khuynh th√†nh ƒë·∫πp nh∆∞ tranh, s√°ng nh∆∞ trƒÉng thu, xinh ƒë·∫πp thanh t√∫, t∆∞∆°i t·∫Øn non m·ªÅm,v·∫ª ƒë·∫πp tuy·ªát th·∫ø, nh∆∞ trƒÉng nh∆∞ hoa, xinh ƒë·∫πp quy·∫øn r≈©, th√πy m·ªã th∆∞·ªõt tha,ng·ªçt ng√†o t√¨nh c·∫£m, th∆°m tho xinh t∆∞∆°i, ngay th·∫≥ng t·ª≠ t·∫ø,ƒë√≥a sen m·ªõi h√©, ƒëoan ch√≠nh thanh nh√£, c√≥ m·ªôt kh√¥ng hai, kh√¥ng g√¨ so c√πng, trƒÉm nƒÉm kh√≥ g·∫∑p, tr·∫ßm ng∆∞ l·∫°c nh·∫°n, b·∫ø nguy·ªát tu hoa, ph√π dung xu·∫•t th·ªßy, qu·ªëc s·∫Øc thi√™n h∆∞∆°ng, hoa nhan nguy·ªát m·∫°o, r·ª±c r·ª° t·ªèa s√°ng, phong th√°i ng·ªùi ng·ªùi, tuy·ªát s·∫Øc kh√≥ c·∫ßu, tuy·ªát s·∫Øc h∆°n ng∆∞·ªùi, tuy·ªát ƒë·∫°i giai nh√¢n, tuy·ªát s·∫Øc giai nh√¢n, tuy·ªát th·∫ø giai nh√¢n, l·ªông l·∫´y nh∆∞ hoa xu√¢n, li√™n hoa ti√™n t·ª≠, xinh ƒë·∫πp ƒëoan trang t∆∞∆°i t√°n quy·∫øn r≈©, ƒë·∫πp h∆°n ph√π dung, m·ªπ m·∫°o nh∆∞ ti√™n, ƒë·∫πp kh√¥ng sao t·∫£ xi·∫øt, m√¥i ƒë·ªè m√° h·ªìng, khuynh qu·ªëc khuynh th√†nh, d√°ng ƒë·∫πp m·∫∑t xinh, m·ªÅm m·∫°i d·ªãu l√≤ng ng∆∞·ªùi, m√° ƒë√†o m·∫Øt h·∫°nh, ƒë√†o hoa xinh ƒë·∫πp, oanh th·∫πn y·∫øu ghen, h·∫±ng nga tr√™n trƒÉng, d·ªãu d√†ng m·ªÅm m·∫°i, xinh ƒë·∫πp m·ªπ l·ªá, t∆∞∆°i ƒë·∫πp v√¥ song, xinh ƒë·∫πp nh·∫•t th·ªùi, xinh ƒë·∫πp nh·∫•t ch·ªën, nhan s·∫Øc ch√≥i m·∫Øt, xinh x·∫Øn nh∆∞ ƒë√†o, m√†i ƒÉn thay c∆°m, h∆∞∆°ng th·∫£o m·ªπ nh√¢n, da tr·∫Øng m√° h·ªìng, vu n·ªØ l·∫°c th·∫ßn, thi√™n t∆∞ qu·ªëc s·∫Øc, thi√™n sinh l·ªá ch·∫•t, l·ª•c tri√™u ph·∫•n ƒë·∫°i, ti√™n t∆∞ ng·ªçc s·∫Øc, kim chi ng·ªçc di·ªáp, thanh tao nh√†n h·∫°, ƒë√†o th·∫πn m·∫≠n nh∆∞·ªùng, khu√¥n m·∫∑t ƒë√†o hoa,th√∫ v·ªã ƒë√°ng y√™u, r·ª±c r·ª° nh∆∞ hoa xu√¢n, trong s√°ng nh∆∞ trƒÉng thu, ƒë√†o chi y√™u y√™u, ch∆∞·ªõc ch∆∞·ªõc k·ª≥ hoa, nh∆∞·ª£c th·ªßy tam thi√™n, m·ªπ nh√¢n nh∆∞ m√¢y, hoa th∆°m c·ªè l·∫°,thi√™n h∆∞∆°ng qu·ªëc di·ªÖm.`.split(",");
function showFlyingWords() {
  const container = document.getElementById("fancy-message-container");
  // T·∫°o b·∫£n sao m·∫£ng ƒë·ªÉ x√°o tr·ªôn m√† kh√¥ng ·∫£nh h∆∞·ªüng m·∫£ng g·ªëc
  let shuffledWords = [...beautifulWords];
  for (let i = shuffledWords.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [shuffledWords[i], shuffledWords[j]] = [shuffledWords[j], shuffledWords[i]];
  }

  shuffledWords.forEach((word, index) => {
    const randomDelay = Math.random() * 2000; // Th·ªùi gian ng·∫´u nhi√™n t·ª´ 0 ƒë·∫øn 2000ms
    setTimeout(() => {
      const span = document.createElement("span");
      span.textContent = word.trim();
      span.className = "fancy-word";
      span.style.top = `${Math.random() * window.innerHeight}px`;
      span.style.left = `-${Math.random() * 200}px`;
      container.appendChild(span);
      setTimeout(() => span.remove(), 5000);
    }, index * 300 + randomDelay);
  });

  // L·∫∑p l·∫°i sau khi ho√†n th√†nh chu k·ª≥
  const totalDelay = shuffledWords.length * 300 + Math.max(...shuffledWords.map(() => Math.random() * 2000)) + 1000;
  setTimeout(showFlyingWords, totalDelay);
}

// G·ªçi h√†m l·∫ßn ƒë·∫ßu sau khi n·ªôi dung hi·ªÉn th·ªã
setTimeout(showFlyingWords, 6000);
};